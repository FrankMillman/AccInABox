<form name="ap_pmts_due" title="Ap payments due" before_start_form="
    <<pyfunc name=`custom.aptrans_funcs.setup_pmts_due_vars`/>>
  " after_start_form="
    <<inline_form name=`get_due_date`>>
      <<on_return>>
        <<return state=`cancelled`>>
          <<end_form state=`cancelled`/>>
        <</return>>
        <<return state=`completed`>>
          <<assign src=`var.as_at_date` tgt=`_ctx.as_at_date`/>>
          <<pyfunc name=`custom.aptrans_funcs.setup_pmts_due`/>>
          <<continue_form/>>
        <</return>>
      <</on_return>>
    <</inline_form>>
  ">
  <db_objects>
    <db_obj name="supp" table_name="ap_suppliers"/>
    <db_obj name="items" table_name="ap_openitems"/>
    <db_obj name="pmt" table_name="ap_tran_pmt"/>
    <db_obj name="subpmt" table_name="ap_subtran_pmt" parent="pmt"/>
    <db_obj name="alloc" table_name="ap_allocations" parent="subpmt"/>
  </db_objects>
  <mem_objects>
    <mem_obj name="var" descr="Form variables">
      <mem_col col_name="as_at_date" data_type="DTE" short_descr="As at date"
        long_descr="Balance due as at which date" allow_amend="true"/>
      <mem_col col_name="include_curr" data_type="BOOL" short_descr="Include curr symbol?"
        long_descr="Include currency symbol (set up in pyfunc)?" allow_amend="true"/>
      <mem_col col_name="include_loc" data_type="BOOL" short_descr="Include location id?"
        long_descr="Include location id (set up in pyfunc)?" allow_amend="true"/>
      <mem_col col_name="include_fun" data_type="BOOL" short_descr="Include function id?"
        long_descr="Include function id (set up in pyfunc)?" allow_amend="true"/>
    </mem_obj>
    <mem_obj name="pmts_due" descr="In-memory table for payments due">
      <mem_col col_name="supp_row_id" data_type="INT" short_descr="Supplier row id"
        long_descr="Supplier row id" key_field="A"/>
      <mem_col col_name="supp_id" data_type="TEXT" short_descr="Supplier id"
        long_descr="Supplier id" col_head="Supplier"/>
      <mem_col col_name="party_name" data_type="TEXT" short_descr="Party name"
        long_descr="Party name" col_head="Name"/>
      <mem_col col_name="curr_symbol" data_type="TEXT" short_descr="Currency symbol"
        long_descr="Currency symbol" col_head="Curr"/>
      <mem_col col_name="location_id" data_type="TEXT" short_descr="Location id"
        long_descr="Location id" col_head="Lcn" allow_null="true"/>
      <mem_col col_name="function_id" data_type="TEXT" short_descr="Function id"
        long_descr="Function id" col_head="Fun" allow_null="true"/>
      <mem_col col_name="bal_due_sup" data_type="DEC" short_descr="Balance due"
        long_descr="Balance due" col_head="Due" allow_amend="true"
        db_scale="2" scale_ptr="scale"/>
      <mem_col col_name="scale" data_type="INT" short_descr="Scale"
        long_descr="Scale"/>
      <mem_col col_name="auth" data_type="BOOL" short_descr="Authorise"
        long_descr="Authorise for payment" col_head="Auth"
        allow_amend="[[`where`, ``, `auth`, `is`, `$False`, ``]]"/>
    </mem_obj>
    <mem_obj name="items_due" descr="In-memory table for items due">
      <mem_col col_name="item_row_id" data_type="INT" short_descr="Item row id"
        long_descr="Item row id" key_field="A"/>
      <mem_col col_name="supp_row_id" data_type="INT" short_descr="Supplier row id"
        long_descr="Supplier row id"
        fkey="[`{mem}.pmts_due`, `row_id`, `supp_id`, `supp_id`, true, null]"/>
      <mem_col col_name="tran_type" data_type="TEXT" short_descr="Tran type"
        long_descr="Tran type" col_head="Type"/>
      <mem_col col_name="tran_number" data_type="TEXT" short_descr="Tran number"
        long_descr="Tran number" col_head="Number"/>
      <mem_col col_name="tran_date" data_type="DTE" short_descr="Tran date"
        long_descr="Tran date" col_head="Date"/>
      <mem_col col_name="due_date" data_type="DTE" short_descr="Due date"
        long_descr="Due date" col_head="Due"/>
      <mem_col col_name="amount_supp" data_type="DEC" short_descr="Amount supp"
        long_descr="Amount - supplier curr" col_head="Amount" db_scale="2" scale_ptr="pmts_due.scale"/>
      <mem_col col_name="due_supp" data_type="DEC" short_descr="Due supp"
        long_descr="Amount due - supplier curr" col_head="Due" db_scale="2" scale_ptr="pmts_due.scale"/>
    </mem_obj>
  </mem_objects>
  <input_params/>
  <output_params/>
  <frame main_object="pmts_due">
    <toolbar/>
    <body>

      <block/>
      <grid data_object="pmts_due" growable="false" num_grid_rows="10">
        <toolbar>
          <tool type="nav"/>
          <tool type="btn" label="&&View/edit" tip="View/edit details of payments due"
            shortcut="alt,KeyV" action="
              <<start_row/>>
              <<inline_form name=`view_edit`>>
                <<on_return>>
                  <<return state=`cancelled`>>
                  <</return>>
                  <<return state=`completed`>>
                    <<pyfunc name=`custom.aptrans_funcs.recalc_pmts_due`/>>
                    <<restart_grid obj_name=`pmts_due` start_col=`row_id` start_val=`{pmts_due.row_id}`/>>
                  <</return>>
                <</on_return>>
              <</inline_form>>
              "/>
        </toolbar>
        <cur_columns>
          <cur_col col_name="supp_id" lng="80" readonly="true"/>
          <cur_col col_name="party_name" lng="150" readonly="true"/>
          <cur_col col_name="curr_symbol" lng="40" readonly="true"
          if="[[`if`, ``, `var.include_curr`, `is`, `$True`, ``]]"/>
          <cur_col col_name="location_id" lng="60" readonly="true"
          if="[[`if`, ``, `var.include_loc`, `is`, `$True`, ``]]"/>
          <cur_col col_name="function_id" lng="60" readonly="true"
          if="[[`if`, ``, `var.include_fun`, `is`, `$True`, ``]]"/>
          <cur_col col_name="bal_due_sup" lng="100" readonly="true"/>
          <cur_col col_name="auth" lng="60" after="
            <<pyfunc name=`custom.aptrans_funcs.on_pmt_auth`/>>"/>
        </cur_columns>
        <cur_filter>
        </cur_filter>
        <cur_sequence>
          <cur_seq col_name="row_id"/>
        </cur_sequence>
        <grid_methods template="Grid"/>
      </grid>
    </body>
    <button_row>
      <button btn_id="auth_all" btn_label="Authorise all" btn_enabled="true"
        btn_validate="false" btn_default="false" action="
          <<pyfunc name=`custom.aptrans_funcs.auth_all_pmts`/>>
        "/>
      <button btn_id="btn_ok" btn_label="Ok" lng="60" btn_enabled="true"
        btn_validate="true" btn_default="true" action="
          <<end_form state=`completed`/>>
        "/>
    </button_row>
    <frame_methods template="Grid"/>
  </frame>
  <inline_form name="get_due_date" title="Balance due date">
    <frame main_object="var">
      <toolbar/>
      <body>
        <block/>
        <panel/>
        <row/>
        <col/>
        <label value="Due date:"/>
        <col/>
        <input obj_name="var" col_name="as_at_date" lng="84" form_dflt="
          <<pyfunc name=`custom.date_funcs.get_due_date`/>>
          "/>
      </body>
      <button_row>
        <button btn_id="btn_ok" btn_label="Ok" lng="60" btn_enabled="true"
          btn_validate="true" btn_default="true" action="
            <<end_form state=`completed`/>>
          "/>
        <button btn_id="btn_can" btn_label="Cancel" lng="60" btn_enabled="true"
          btn_validate="false" btn_default="false" action="
            <<end_form state=`cancelled`/>>
          "/>
      </button_row>
      <frame_methods>
        <method name="on_req_cancel" action="
          <<end_form state=`cancelled`/>>
        "/>
        <method name="on_req_close" action="
          <<end_form state=`cancelled`/>>
        "/>
      </frame_methods>
    </frame>
  </inline_form>
  <inline_form name="view_edit" title="View/edit details of payment">
    <frame main_object="items">
      <toolbar/>
      <body>
        <block/>
        <panel/>
        <row/>
        <col/>
        <label value="Supplier id:"/>
        <col/>
        <input obj_name="pmts_due" col_name="supp_id" lng="80" readonly="true"/>
        <block/>
        <grid data_object="items" growable="false" num_grid_rows="10">
          <toolbar>
            <tool type="nav"/>
          </toolbar>
          <cur_columns>
            <cur_col col_name="tran_type" lng="6" readonly="true"/>
            <cur_col col_name="tran_number" lng="100" readonly="true"/>
            <cur_col col_name="tran_date" lng="80" readonly="true"/>
            <cur_col col_name="amount_supp" lng="100" readonly="true"/>
            <cur_col col_name="due_supp" lng="100" readonly="true"/>
            <cur_col col_name="due_date" lng="80"/>
          </cur_columns>
          <cur_filter>
            <cur_fil test="WHERE" lbr="" col_name="supp_row_id"
              op="=" expr="pmts_due.supp_row_id" rbr=""/>
            <cur_fil test="AND" lbr="" col_name="due_date"
              op="<<=" expr="_ctx.as_at_date" rbr=""/>
            <cur_fil test="AND" lbr="" col_name="due_supp"
              op="!=" expr="0" rbr=""/>
          </cur_filter>
          <cur_sequence>
            <cur_seq col_name="row_id"/>
          </cur_sequence>
          <grid_methods template="Grid"/>
        </grid>
      </body>
      <button_row>
        <button btn_id="btn_ok" btn_label="Ok" lng="60" btn_enabled="true"
          btn_validate="true" btn_default="true" action="
            <<end_form state=`completed`/>>
          "/>
      </button_row>
      <frame_methods>
        <method name="on_req_cancel" action="
          <<end_form state=`completed`/>>
        "/>
        <method name="on_req_close" action="
          <<end_form state=`completed`/>>
        "/>
      </frame_methods>
    </frame>
  </inline_form>
</form>
